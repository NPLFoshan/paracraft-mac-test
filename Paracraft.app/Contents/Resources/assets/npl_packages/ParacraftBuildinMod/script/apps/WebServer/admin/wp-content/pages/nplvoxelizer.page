<?npl
--[[
Title: nplvoxelizer page
Author: leio
Date: 2016/10/5
Desc: 
]]


wp_enqueue_style("bootstrap-css",				"/wp-includes/js/bootstrap/css/bootstrap.min.css");
wp_enqueue_script("jquery",						"/wp-includes/js/jquery/jquery.min.js");
wp_enqueue_script("ace",						"/wp-includes/js/ace/ace.js"); 
wp_enqueue_script("angular",					"/wp-includes/js/angular/angular.min.js");
wp_enqueue_script("ngStorage",					"/wp-includes/js/angular/ngStorage.js");
wp_enqueue_script("ngSanitize",					"/wp-includes/js/angular/angular-sanitize.min.js");
wp_enqueue_script("ui-bootstrap-tpls",			"/wp-includes/js/angular/ui-bootstrap-tpls-1.3.3.min.js");


wp_enqueue_script("nplcad_FileSaver",				"/wp-content/pages/nplcad/js/libs/FileSaver.min.js");
wp_enqueue_script("nplcad_Blob",					"/wp-content/pages/nplcad/js/libs/Blob.js");

--reslider
wp_enqueue_script("rzslider",						"/wp-content/pages/nplcad/js/libs/rzslider.min.js");
wp_enqueue_style("rzslider-css",					"/wp-content/pages/nplcad/js/libs/rzslider.min.css");

--threejs
wp_enqueue_script("threejs",						"/wp-content/pages/nplcad/js/libs/threejs/three.min.js");
wp_enqueue_script("TransformControls",				"/wp-content/pages/nplcad/js/libs/threejs/controls/TransformControls.js");
wp_enqueue_script("OrbitControls",					"/wp-content/pages/nplcad/js/libs/threejs/controls/OrbitControls.js");
wp_enqueue_script("STLLoader",						"/wp-content/pages/nplcad/js/libs/threejs/STLLoader.js");
wp_enqueue_style("threejs-css",						"/wp-content/pages/nplcad/js/libs/threejs/main.css");
wp_enqueue_style("threejs-light-css",				"/wp-content/pages/nplcad/js/libs/threejs/light.css");

wp_enqueue_script("nplvoxelizer_app",					"/wp-content/pages/nplcad/app.js");
wp_enqueue_script("NplVoxelizerController",				"/wp-content/pages/nplcad/controllers/NplVoxelizerController.js");


NPL.load("(gl)Mod/ModelVoxelizer/services/ModelVoxelizerService.lua");
local ModelVoxelizerService = commonlib.gettable("Mod.ModelVoxelizer.services.ModelVoxelizerService");

LOG.std(nil, "info", "nplvoxelizer page", "received a request");

local data = request:get("data");
local block_length = request:get("block_length");
block_length = tonumber(block_length);
local input_format = request:get("input_format");
local output_format = request:get("output_format");
if(is_ajax()) then
	add_action('wp_ajax_nplvoxelizer_voxelizer', function()
		LOG.std(nil, "info", "nplvoxelizer page", "do ajax action:nplvoxelizer_voxelizer");
		local preview_stl_content;
		local content;
		ModelVoxelizerService.start(data,false,block_length,input_format,output_format,function(msg)
			preview_stl_content = msg.preview_stl_content;
			content = msg.content;
			mesh_content = msg.mesh_content;
			resume();
		end);
		yield();
		response:send({preview_stl_content,content,mesh_content},true);
    end)
	return;
end
?>
